var Eventra;(()=>{"use strict";var t={568:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Eventra=void 0;const n=r(s(351));e.Eventra=class{constructor(t){this._listeners=new n.default({mode:"recurring"}),this._singularListeners=new n.default({mode:"once"}),this.addListener=this.on,this.off=this.removeListener,this._options=t||{maxListeners:50}}emit(t,...e){this._listeners.executeEvent(t,...e),this._singularListeners.executeEvent(t,...e)}eventNames(){let t=[];return this._listeners.storage.map(((e,s)=>{t.includes(s)||t.push(s)})),this._singularListeners.storage.map(((e,s)=>{t.includes(s)||t.push(s)})),t}getMaxListeners(){return this._options.maxListeners}listenerCount(t){return this._listeners.countListeners(t)+this._singularListeners.countListeners(t)}listeners(t){}on(t,e){this._listeners.add(t,e)}once(t,e){this._singularListeners.add(t,e)}prependListener(t,e){}prependOnceListener(t,e){}removeAllListeners(t){return("string"==typeof t?[t]:t).map((t=>{this._listeners.removeEvent(t),this._singularListeners.removeEvent(t)})),this}removeListener(t,e){return this._listeners.removeListener(t,e),this._singularListeners.removeListener(t,e),this}setMaxListeners(t){return this._options.maxListeners=t,this}rawListeners(t){}}},351:function(t,e,s){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=r(s(286));e.default=class{constructor(t){this._internalStorage=new n.default,this._options=t||{mode:"recurring"}}get mode(){return this._options.mode}get storage(){return this._internalStorage}_updateInternalStorage(t){t&&(this._internalStorage=t)}_cloneInternalStorage(){return this._internalStorage.clone()}add(t,e){let s=this._cloneInternalStorage(),r=s.get(t);return r?(r.push(e),this._updateInternalStorage(s),this):(s.set(t,[e]),this._updateInternalStorage(s),this)}prepend(t,e){let s=this._cloneInternalStorage(),r=s.get(t);return r?(r.unshift(e),this._updateInternalStorage(s),this):(s.set(t,[e]),this._updateInternalStorage(s),this)}removeListener(t,e){let s=this._cloneInternalStorage(),r=s.get(t);if(!r)return this;if(!r.includes(e))return this;if(1==r.length)return s.delete(t),this._updateInternalStorage(s),this;const n=r.indexOf(e);return n>-1&&r.splice(n,1),this._updateInternalStorage(s),this}removeEvent(t){let e=this._cloneInternalStorage();return e.get(t)?(e.delete(t),this._updateInternalStorage(e),this):this}countListeners(t){const e=this._internalStorage.get(t);return e?e.length:0}executeEvent(t,...e){let s=this._cloneInternalStorage(),r=s.get(t);return r?(r.map(((t,s)=>{t(...e)})),"once"==this.mode&&s.delete(t),this._updateInternalStorage(s),this):this}}},286:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Collection=void 0;class s extends Map{get(t){return super.get(t)}set(t,e){return super.set(t,e)}has(t){return super.has(t)}delete(t){return super.delete(t)}clear(){return super.clear()}hasAll(...t){return t.every((t=>super.has(t)))}hasAny(...t){return t.some((t=>super.has(t)))}first(t){if(void 0===t)return this.values().next().value;if(t<0)return this.last(-1*t);t=Math.min(this.size,t);const e=this.values();return Array.from({length:t},(()=>e.next().value))}firstKey(t){if(void 0===t)return this.keys().next().value;if(t<0)return this.lastKey(-1*t);t=Math.min(this.size,t);const e=this.keys();return Array.from({length:t},(()=>e.next().value))}last(t){const e=[...this.values()];return void 0===t?e[e.length-1]:t<0?this.first(-1*t):t?e.slice(-t):[]}lastKey(t){const e=[...this.keys()];return void 0===t?e[e.length-1]:t<0?this.firstKey(-1*t):t?e.slice(-t):[]}random(t){const e=[...this.values()];return void 0===t?e[Math.floor(Math.random()*e.length)]:e.length&&t?Array.from({length:Math.min(t,e.length)},(()=>e.splice(Math.floor(Math.random()*e.length),1)[0])):[]}randomKey(t){const e=[...this.keys()];return void 0===t?e[Math.floor(Math.random()*e.length)]:e.length&&t?Array.from({length:Math.min(t,e.length)},(()=>e.splice(Math.floor(Math.random()*e.length),1)[0])):[]}find(t,e){void 0!==e&&(t=t.bind(e));for(const[e,s]of this)if(t(s,e,this))return s}findKey(t,e){void 0!==e&&(t=t.bind(e));for(const[e,s]of this)if(t(s,e,this))return e}sweep(t,e){void 0!==e&&(t=t.bind(e));const s=this.size;for(const[e,s]of this)t(s,e,this)&&this.delete(e);return s-this.size}filter(t,e){void 0!==e&&(t=t.bind(e));const s=new this.constructor[Symbol.species];for(const[e,r]of this)t(r,e,this)&&s.set(e,r);return s}partition(t,e){void 0!==e&&(t=t.bind(e));const s=[new this.constructor[Symbol.species],new this.constructor[Symbol.species]];for(const[e,r]of this)t(r,e,this)?s[0].set(e,r):s[1].set(e,r);return s}flatMap(t,e){const s=this.map(t,e);return(new this.constructor[Symbol.species]).concat(...s)}map(t,e){void 0!==e&&(t=t.bind(e));const s=this.entries();return Array.from({length:this.size},(()=>{const[e,r]=s.next().value;return t(r,e,this)}))}mapValues(t,e){void 0!==e&&(t=t.bind(e));const s=new this.constructor[Symbol.species];for(const[e,r]of this)s.set(e,t(r,e,this));return s}some(t,e){void 0!==e&&(t=t.bind(e));for(const[e,s]of this)if(t(s,e,this))return!0;return!1}every(t,e){void 0!==e&&(t=t.bind(e));for(const[e,s]of this)if(!t(s,e,this))return!1;return!0}reduce(t,e){let s;if(void 0!==e){s=e;for(const[e,r]of this)s=t(s,r,e,this);return s}let r=!0;for(const[e,n]of this)r?(s=n,r=!1):s=t(s,n,e,this);if(r)throw new TypeError("Reduce of empty collection with no initial value");return s}each(t,e){return this.forEach(t,e),this}tap(t,e){return void 0!==e&&(t=t.bind(e)),t(this),this}clone(){return new this.constructor[Symbol.species](this)}concat(...t){const e=this.clone();for(const s of t)for(const[t,r]of s)e.set(t,r);return e}equals(t){if(!t)return!1;if(this===t)return!0;if(this.size!==t.size)return!1;for(const[e,s]of this)if(!t.has(e)||s!==t.get(e))return!1;return!0}sort(t=s.defaultSort){const e=[...this.entries()];e.sort(((e,s)=>t(e[1],s[1],e[0],s[0]))),super.clear();for(const[t,s]of e)super.set(t,s);return this}intersect(t){const e=new this.constructor[Symbol.species];for(const[s,r]of t)this.has(s)&&e.set(s,r);return e}difference(t){const e=new this.constructor[Symbol.species];for(const[s,r]of t)this.has(s)||e.set(s,r);for(const[s,r]of this)t.has(s)||e.set(s,r);return e}sorted(t=s.defaultSort){return new this.constructor[Symbol.species](this).sort(((e,s,r,n)=>t(e,s,r,n)))}static defaultSort(t,e){return Number(t>e)||Number(t===e)-1}}e.Collection=s,s.default=s,e.default=s}},e={},s=function s(r){var n=e[r];if(void 0!==n)return n.exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,s),i.exports}(568);Eventra=s})();